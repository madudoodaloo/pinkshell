#.SILENT:
NAME = minishell
CC = cc

#SRC = $(wildcard src/**/*.c) $(wildcard src/*.c)
#libs
#SRC_PATH =		./src/
SRC =			src/main/main.c src/parser/env_utils.c src/parser/free.c src/parser/init.c \
				src/parser/lexer.c src/parser/lst_utils.c \
				src/builtins/cd.c src/builtins/echo.c src/builtins/env1.c src/builtins/env2.c \
				src/builtins/exit.c src/builtins/pwd.c \
				src/utils/helpers.c
#SRC =			$(addprefix $(SRC_PATH), $(SRC_FILES))

LIBFT =			./ft_libft/libft.a

CFLAGS =		-g -fsanitize=address -I./includes #-Wall -Wextra -Werror
OTHERFLAGS =	-L$(LIBFT_PATH) -lft -lreadline -lasan -O3

OBJ_DIR =		./obj/
OBJS =			$(patsubst src/%.c, $(OBJ_DIR)%.o, $(SRC))

#rules
all: $(NAME)

$(NAME): $(OBJS)
	@make -sC ft_libft/
	@$(CC) $(CFLAGS) $(OBJS) $(OTHERFLAGS) -o $(NAME)

$(OBJ_DIR)%.o: %.c
	@mkdir -p $(OBJ_DIR)
	@$(CC) $(CFLAGS) $(INC_FLAGS) -c $< -o $@

clean:
	@rm -f $(OBJ_DIR)/*.o
	@rm -rf $(OBJ_DIR)
	@make clean -sC ft_libft/

fclean: clean
	@rm -f $(NAME)
	@make fclean -sC ft_libft/

re: fclean all

.PHONY: all clean fclean re
